version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: memvault-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: memvault
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - memvault

  redis:
    image: redis:7-alpine
    container_name: memvault-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - memvault

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
      target: development
    container_name: memvault-backend
    ports:
      - "8000:8000"
    env_file:
      - ./packages/backend/.env
    volumes:
      - ./packages/backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - memvault

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
      target: development
    container_name: memvault-frontend
    ports:
      - "3000:3000"
    env_file:
      - ./packages/frontend/.env.local
    volumes:
      - ./packages/frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - memvault

volumes:
  postgres_data:
  redis_data:

networks:
  memvault:
    driver: bridge
